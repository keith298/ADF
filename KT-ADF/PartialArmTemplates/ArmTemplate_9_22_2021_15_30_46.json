{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KT-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest Raw Daily Sales AMZ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adf/Input/salesData.txt"
							},
							{
								"name": "Destination",
								"value": "Output/"
							},
							{
								"name": "Channel",
								"value": "Amazon"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "order-id",
											"type": "String"
										},
										"sink": {
											"name": "order-id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "order-item-id",
											"type": "String"
										},
										"sink": {
											"name": "order-item-id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "purchase-date",
											"type": "String"
										},
										"sink": {
											"name": "purchase-date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "payments-date",
											"type": "String"
										},
										"sink": {
											"name": "payments-date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sku",
											"type": "String"
										},
										"sink": {
											"name": "sku",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "number-of-items",
											"type": "String"
										},
										"sink": {
											"name": "number-of-items",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "product-name",
											"type": "String"
										},
										"sink": {
											"name": "product-name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "quantity-purchased",
											"type": "String"
										},
										"sink": {
											"name": "quantity-purchased",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "currency",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "item-price",
											"type": "Double"
										},
										"sink": {
											"name": "item-price",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "item-tax",
											"type": "String"
										},
										"sink": {
											"name": "item-tax",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "shipping-price",
											"type": "Double"
										},
										"sink": {
											"name": "shipping-price",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "shipping-tax",
											"type": "String"
										},
										"sink": {
											"name": "shipping-tax",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship-service-level",
											"type": "String"
										},
										"sink": {
											"name": "ship-service-level",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ship-service-name",
											"type": "String"
										},
										"sink": {
											"name": "ship-service-name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Asalesraw",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Ingest Daily Sales AMZ",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Raw Daily Sales AMZ",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Asalesraw')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Asalesraw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "salesData.txt",
						"folderPath": "Input",
						"fileSystem": "adf"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order-id",
						"type": "String"
					},
					{
						"name": "order-item-id",
						"type": "String"
					},
					{
						"name": "purchase-date",
						"type": "String"
					},
					{
						"name": "payments-date",
						"type": "String"
					},
					{
						"name": "buyer-email",
						"type": "String"
					},
					{
						"name": "buyer-name",
						"type": "String"
					},
					{
						"name": "payment-method-details",
						"type": "String"
					},
					{
						"name": "buyer-phone-number",
						"type": "String"
					},
					{
						"name": "sku",
						"type": "String"
					},
					{
						"name": "number-of-items",
						"type": "String"
					},
					{
						"name": "product-name",
						"type": "String"
					},
					{
						"name": "quantity-purchased",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "item-price",
						"type": "String"
					},
					{
						"name": "item-tax",
						"type": "String"
					},
					{
						"name": "shipping-price",
						"type": "String"
					},
					{
						"name": "shipping-tax",
						"type": "String"
					},
					{
						"name": "ship-service-level",
						"type": "String"
					},
					{
						"name": "ship-service-name",
						"type": "String"
					},
					{
						"name": "recipient-name",
						"type": "String"
					},
					{
						"name": "ship-address-1",
						"type": "String"
					},
					{
						"name": "ship-address-2",
						"type": "String"
					},
					{
						"name": "ship-address-3",
						"type": "String"
					},
					{
						"name": "address-type",
						"type": "String"
					},
					{
						"name": "ship-city",
						"type": "String"
					},
					{
						"name": "ship-state",
						"type": "String"
					},
					{
						"name": "ship-postal-code",
						"type": "String"
					},
					{
						"name": "ship-country",
						"type": "String"
					},
					{
						"name": "ship-phone-number",
						"type": "String"
					},
					{
						"name": "item-promotion-discount",
						"type": "String"
					},
					{
						"name": "item-promotion-id",
						"type": "String"
					},
					{
						"name": "ship-promotion-discount",
						"type": "String"
					},
					{
						"name": "ship-promotion-id",
						"type": "String"
					},
					{
						"name": "delivery-start-date",
						"type": "String"
					},
					{
						"name": "delivery-end-date",
						"type": "String"
					},
					{
						"name": "delivery-time-zone",
						"type": "String"
					},
					{
						"name": "delivery-Instructions",
						"type": "String"
					},
					{
						"name": "order-channel",
						"type": "String"
					},
					{
						"name": "order-channel-instance",
						"type": "String"
					},
					{
						"name": "external-order-id",
						"type": "String"
					},
					{
						"name": "payment-method",
						"type": "String"
					},
					{
						"name": "cod-collectible-amount",
						"type": "String"
					},
					{
						"name": "already-paid",
						"type": "String"
					},
					{
						"name": "payment-method-fee",
						"type": "String"
					},
					{
						"name": "purchase-order-number",
						"type": "String"
					},
					{
						"name": "is-prime",
						"type": "String"
					},
					{
						"name": "is-premium-order",
						"type": "String"
					},
					{
						"name": "tax-collection-model",
						"type": "String"
					},
					{
						"name": "tax-collection-responsible-party",
						"type": "String"
					},
					{
						"name": "default-ship-from-address-name",
						"type": "String"
					},
					{
						"name": "default-ship-from-address-field-1",
						"type": "String"
					},
					{
						"name": "default-ship-from-address-field-2",
						"type": "String"
					},
					{
						"name": "default-ship-from-address-field-3",
						"type": "String"
					},
					{
						"name": "default-ship-from-city",
						"type": "String"
					},
					{
						"name": "default-ship-from-state",
						"type": "String"
					},
					{
						"name": "default-ship-from-country",
						"type": "String"
					},
					{
						"name": "default-ship-from-postal-code",
						"type": "String"
					},
					{
						"name": "actual-ship-from-address-name",
						"type": "String"
					},
					{
						"name": "actual-ship-from-address-field-1",
						"type": "String"
					},
					{
						"name": "actual-ship-from-address-field-2",
						"type": "String"
					},
					{
						"name": "actual-ship-from-address-field-3",
						"type": "String"
					},
					{
						"name": "actual-ship-from-city",
						"type": "String"
					},
					{
						"name": "actual-ship-from-state",
						"type": "String"
					},
					{
						"name": "actual-ship-from-country",
						"type": "String"
					},
					{
						"name": "actual-ship-from-postal-code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "results",
						"folderPath": "Output",
						"fileSystem": "adf"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "order-id",
						"type": "UTF8"
					},
					{
						"name": "order-item-id",
						"type": "UTF8"
					},
					{
						"name": "purchase-date",
						"type": "UTF8"
					},
					{
						"name": "payments-date",
						"type": "UTF8"
					},
					{
						"name": "sku",
						"type": "UTF8"
					},
					{
						"name": "number-of-items",
						"type": "UTF8"
					},
					{
						"name": "product-name",
						"type": "UTF8"
					},
					{
						"name": "quantity-purchased",
						"type": "UTF8"
					},
					{
						"name": "currency",
						"type": "UTF8"
					},
					{
						"name": "item-price",
						"type": "DOUBLE"
					},
					{
						"name": "item-tax",
						"type": "UTF8"
					},
					{
						"name": "shipping-price",
						"type": "DOUBLE"
					},
					{
						"name": "shipping-tax",
						"type": "UTF8"
					},
					{
						"name": "ship-service-level",
						"type": "UTF8"
					},
					{
						"name": "ship-service-name",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weeklySales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Output",
						"fileSystem": "adf"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "order-id",
						"type": "UTF8"
					},
					{
						"name": "order-item-id",
						"type": "UTF8"
					},
					{
						"name": "purchase-date",
						"type": "UTF8"
					},
					{
						"name": "payments-date",
						"type": "UTF8"
					},
					{
						"name": "buyer-email",
						"type": "UTF8"
					},
					{
						"name": "buyer-name",
						"type": "UTF8"
					},
					{
						"name": "payment-method-details",
						"type": "UTF8"
					},
					{
						"name": "buyer-phone-number",
						"type": "UTF8"
					},
					{
						"name": "sku",
						"type": "UTF8"
					},
					{
						"name": "number-of-items",
						"type": "UTF8"
					},
					{
						"name": "product-name",
						"type": "UTF8"
					},
					{
						"name": "quantity-purchased",
						"type": "UTF8"
					},
					{
						"name": "currency",
						"type": "UTF8"
					},
					{
						"name": "item-price",
						"type": "UTF8"
					},
					{
						"name": "item-tax",
						"type": "UTF8"
					},
					{
						"name": "shipping-price",
						"type": "UTF8"
					},
					{
						"name": "shipping-tax",
						"type": "UTF8"
					},
					{
						"name": "ship-service-level",
						"type": "UTF8"
					},
					{
						"name": "ship-service-name",
						"type": "UTF8"
					},
					{
						"name": "recipient-name",
						"type": "UTF8"
					},
					{
						"name": "ship-address-1",
						"type": "UTF8"
					},
					{
						"name": "ship-address-2",
						"type": "UTF8"
					},
					{
						"name": "ship-address-3",
						"type": "UTF8"
					},
					{
						"name": "address-type",
						"type": "UTF8"
					},
					{
						"name": "ship-city",
						"type": "UTF8"
					},
					{
						"name": "ship-state",
						"type": "UTF8"
					},
					{
						"name": "ship-postal-code",
						"type": "UTF8"
					},
					{
						"name": "ship-country",
						"type": "UTF8"
					},
					{
						"name": "ship-phone-number",
						"type": "UTF8"
					},
					{
						"name": "item-promotion-discount",
						"type": "UTF8"
					},
					{
						"name": "item-promotion-id",
						"type": "UTF8"
					},
					{
						"name": "ship-promotion-discount",
						"type": "UTF8"
					},
					{
						"name": "ship-promotion-id",
						"type": "UTF8"
					},
					{
						"name": "delivery-start-date",
						"type": "UTF8"
					},
					{
						"name": "delivery-end-date",
						"type": "UTF8"
					},
					{
						"name": "delivery-time-zone",
						"type": "UTF8"
					},
					{
						"name": "delivery-Instructions",
						"type": "UTF8"
					},
					{
						"name": "order-channel",
						"type": "UTF8"
					},
					{
						"name": "order-channel-instance",
						"type": "UTF8"
					},
					{
						"name": "external-order-id",
						"type": "UTF8"
					},
					{
						"name": "payment-method",
						"type": "UTF8"
					},
					{
						"name": "cod-collectible-amount",
						"type": "UTF8"
					},
					{
						"name": "already-paid",
						"type": "UTF8"
					},
					{
						"name": "payment-method-fee",
						"type": "UTF8"
					},
					{
						"name": "purchase-order-number",
						"type": "UTF8"
					},
					{
						"name": "is-prime",
						"type": "UTF8"
					},
					{
						"name": "is-premium-order",
						"type": "UTF8"
					},
					{
						"name": "tax-collection-model",
						"type": "UTF8"
					},
					{
						"name": "tax-collection-responsible-party",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-address-name",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-address-field-1",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-address-field-2",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-address-field-3",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-city",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-state",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-country",
						"type": "UTF8"
					},
					{
						"name": "default-ship-from-postal-code",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-address-name",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-address-field-1",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-address-field-2",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-address-field-3",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-city",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-state",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-country",
						"type": "UTF8"
					},
					{
						"name": "actual-ship-from-postal-code",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://testv2storage.dfs.core.windows.net",
					"accountKey": {
						"type": "SecureString",
						"value": "**********"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Asalesraw",
								"type": "DatasetReference"
							},
							"name": "dataflow1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "weeklySales",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "weeklySalesData"
						}
					],
					"script": "source(output(\n\t\t{order-id} as string,\n\t\t{order-item-id} as string,\n\t\t{purchase-date} as string,\n\t\t{payments-date} as string,\n\t\t{buyer-email} as string,\n\t\t{buyer-name} as string,\n\t\t{payment-method-details} as string,\n\t\t{buyer-phone-number} as string,\n\t\tsku as string,\n\t\t{number-of-items} as string,\n\t\t{product-name} as string,\n\t\t{quantity-purchased} as string,\n\t\tcurrency as string,\n\t\t{item-price} as string,\n\t\t{item-tax} as string,\n\t\t{shipping-price} as string,\n\t\t{shipping-tax} as string,\n\t\t{ship-service-level} as string,\n\t\t{ship-service-name} as string,\n\t\t{recipient-name} as string,\n\t\t{ship-address-1} as string,\n\t\t{ship-address-2} as string,\n\t\t{ship-address-3} as string,\n\t\t{address-type} as string,\n\t\t{ship-city} as string,\n\t\t{ship-state} as string,\n\t\t{ship-postal-code} as string,\n\t\t{ship-country} as string,\n\t\t{ship-phone-number} as string,\n\t\t{item-promotion-discount} as string,\n\t\t{item-promotion-id} as string,\n\t\t{ship-promotion-discount} as string,\n\t\t{ship-promotion-id} as string,\n\t\t{delivery-start-date} as string,\n\t\t{delivery-end-date} as string,\n\t\t{delivery-time-zone} as string,\n\t\t{delivery-Instructions} as string,\n\t\t{order-channel} as string,\n\t\t{order-channel-instance} as string,\n\t\t{external-order-id} as string,\n\t\t{payment-method} as string,\n\t\t{cod-collectible-amount} as string,\n\t\t{already-paid} as string,\n\t\t{payment-method-fee} as string,\n\t\t{purchase-order-number} as string,\n\t\t{is-prime} as string,\n\t\t{is-premium-order} as string,\n\t\t{tax-collection-model} as string,\n\t\t{tax-collection-responsible-party} as string,\n\t\t{default-ship-from-address-name} as string,\n\t\t{default-ship-from-address-field-1} as string,\n\t\t{default-ship-from-address-field-2} as string,\n\t\t{default-ship-from-address-field-3} as string,\n\t\t{default-ship-from-city} as string,\n\t\t{default-ship-from-state} as string,\n\t\t{default-ship-from-country} as string,\n\t\t{default-ship-from-postal-code} as string,\n\t\t{actual-ship-from-address-name} as string,\n\t\t{actual-ship-from-address-field-1} as string,\n\t\t{actual-ship-from-address-field-2} as string,\n\t\t{actual-ship-from-address-field-3} as string,\n\t\t{actual-ship-from-city} as string,\n\t\t{actual-ship-from-state} as string,\n\t\t{actual-ship-from-country} as string,\n\t\t{actual-ship-from-postal-code} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dataflow1\nSelect1 derive(channel = 'Amazon',\n\t\t{week-no} = toInteger((year(toDate({purchase-date})) + (dayOfYear(toDate({purchase-date}))/7))),\n\t\t{month-no} = toInteger((year(toDate({purchase-date})) + (weekOfYear(toDate({purchase-date}))/12))),\n\t\tsoldForTimes100 = toInteger((toDecimal({item-price})+toDecimal({shipping-price}))*100.)) ~> DerivedColumn1\ndataflow1 select(mapColumn(\n\t\t{order-id},\n\t\t{order-item-id},\n\t\t{purchase-date},\n\t\t{payments-date},\n\t\t{buyer-email},\n\t\t{buyer-name},\n\t\tsku,\n\t\t{number-of-items},\n\t\t{product-name},\n\t\t{quantity-purchased},\n\t\tcurrency,\n\t\t{item-price},\n\t\t{item-tax},\n\t\t{shipping-price},\n\t\t{shipping-tax},\n\t\t{ship-service-level},\n\t\t{ship-service-name},\n\t\t{recipient-name},\n\t\t{ship-state},\n\t\t{ship-postal-code},\n\t\t{is-prime},\n\t\t{is-premium-order}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn1 aggregate(groupBy({week-no}),\n\tsoldForTimes100 = sum(soldForTimes100)) ~> weeklySalesData\nweeklySalesData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{order-id} as string,\n\t\t{order-item-id} as string,\n\t\t{purchase-date} as string,\n\t\t{payments-date} as string,\n\t\t{buyer-email} as string,\n\t\t{buyer-name} as string,\n\t\t{payment-method-details} as string,\n\t\t{buyer-phone-number} as string,\n\t\tsku as string,\n\t\t{number-of-items} as string,\n\t\t{product-name} as string,\n\t\t{quantity-purchased} as string,\n\t\tcurrency as string,\n\t\t{item-price} as string,\n\t\t{item-tax} as string,\n\t\t{shipping-price} as string,\n\t\t{shipping-tax} as string,\n\t\t{ship-service-level} as string,\n\t\t{ship-service-name} as string,\n\t\t{recipient-name} as string,\n\t\t{ship-address-1} as string,\n\t\t{ship-address-2} as string,\n\t\t{ship-address-3} as string,\n\t\t{address-type} as string,\n\t\t{ship-city} as string,\n\t\t{ship-state} as string,\n\t\t{ship-postal-code} as string,\n\t\t{ship-country} as string,\n\t\t{ship-phone-number} as string,\n\t\t{item-promotion-discount} as string,\n\t\t{item-promotion-id} as string,\n\t\t{ship-promotion-discount} as string,\n\t\t{ship-promotion-id} as string,\n\t\t{delivery-start-date} as string,\n\t\t{delivery-end-date} as string,\n\t\t{delivery-time-zone} as string,\n\t\t{delivery-Instructions} as string,\n\t\t{order-channel} as string,\n\t\t{order-channel-instance} as string,\n\t\t{external-order-id} as string,\n\t\t{payment-method} as string,\n\t\t{cod-collectible-amount} as string,\n\t\t{already-paid} as string,\n\t\t{payment-method-fee} as string,\n\t\t{purchase-order-number} as string,\n\t\t{is-prime} as string,\n\t\t{is-premium-order} as string,\n\t\t{tax-collection-model} as string,\n\t\t{tax-collection-responsible-party} as string,\n\t\t{default-ship-from-address-name} as string,\n\t\t{default-ship-from-address-field-1} as string,\n\t\t{default-ship-from-address-field-2} as string,\n\t\t{default-ship-from-address-field-3} as string,\n\t\t{default-ship-from-city} as string,\n\t\t{default-ship-from-state} as string,\n\t\t{default-ship-from-country} as string,\n\t\t{default-ship-from-postal-code} as string,\n\t\t{actual-ship-from-address-name} as string,\n\t\t{actual-ship-from-address-field-1} as string,\n\t\t{actual-ship-from-address-field-2} as string,\n\t\t{actual-ship-from-address-field-3} as string,\n\t\t{actual-ship-from-city} as string,\n\t\t{actual-ship-from-state} as string,\n\t\t{actual-ship-from-country} as string,\n\t\t{actual-ship-from-postal-code} as string\n\t),\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Asalesraw')]",
				"[concat(variables('factoryId'), '/datasets/weeklySales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "Parquet1",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> Parquet1",
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared Parquet1 = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://testv2storage.dfs.core.windows.net/adf/Output/results\"),\r\n  Parquet = Parquet.Document(AdfDoc)\r\nin\r\n  Parquet;\r\nshared UserQuery = let\r\n  Source = Parquet1,\r\n  #\"Removed duplicates\" = Table.Distinct(Source, {\"order-id\"}),\r\n  #\"Grouped rows\" = Table.Group(#\"Removed duplicates\", {\"purchase-date\"}, {{\"dailySales\", each List.Sum([#\"item-price\"]), type nullable number}})\r\nin\r\n  #\"Grouped rows\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		}
	]
}