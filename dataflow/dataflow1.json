{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AMZ_US_Sales",
						"type": "DatasetReference"
					},
					"name": "AmzUsSales"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "weeklySalesData"
				}
			],
			"script": "source(output(\n\t\t{order-id\torder-item-id\tpurchase-date\tpayments-date\tbuyer-email\tbuyer-name\tpayment-method-details\tbuyer-phone-number\tsku\tnumber-of-items\tproduct-name\tquantity-purchased\tcurrency\titem-price\titem-tax\tshipping-price\tshipping-tax\tship-service-level\tship-service-name\trecipient-name\tship-address-1\tship-address-2\tship-address-3\taddress-type\tship-city\tship-state\tship-postal-code\tship-country\tship-phone-number\titem-promotion-discount\titem-promotion-id\tship-promotion-discount\tship-promotion-id\tdelivery-start-date\tdelivery-end-date\tdelivery-time-zone\tdelivery-Instructions\torder-channel\torder-channel-instance\texternal-order-id\tpayment-method\tcod-collectible-amount\talready-paid\tpayment-method-fee\tpurchase-order-number\tis-prime\tis-premium-order\ttax-collection-model\ttax-collection-responsible-party\tdefault-ship-from-address-name\tdefault-ship-from-address-field-1\tdefault-ship-from-address-field-2\tdefault-ship-from-address-field-3\tdefault-ship-from-city\tdefault-ship-from-state\tdefault-ship-from-country\tdefault-ship-from-postal-code\tactual-ship-from-address-name\tactual-ship-from-address-field-1\tactual-ship-from-address-field-2\tactual-ship-from-address-field-3\tactual-ship-from-city\tactual-ship-from-state\tactual-ship-from-country\tactual-ship-from-postal-code} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AmzUsSales\nSelect1 derive(channel = 'Amazon',\n\t\t{week-no} = toInteger((year(toDate({purchase-date})) + (dayOfYear(toDate({purchase-date}))/7))),\n\t\t{month-no} = toInteger((year(toDate({purchase-date})) + (weekOfYear(toDate({purchase-date}))/12))),\n\t\tsoldForTimes100 = toInteger((toDecimal({item-price})+toDecimal({shipping-price}))*100.)) ~> DerivedColumn1\nAmzUsSales select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn1 aggregate(groupBy({week-no}),\n\tsoldForTimes100 = sum(soldForTimes100)) ~> weeklySalesData\nweeklySalesData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'adf',\n\tfolderPath: 'Output',\n\tcompressionCodec: 'snappy',\n\tfilePattern:'weekly',\n\tumask: 0666,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}